{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { scrollConfig } from '../config/scrollConfig';\nexport const useAutoScroll = (elementRef, isHovered) => {\n  _s();\n  const autoScroll = element => {\n    if (element) {\n      const tileWidth = element.clientWidth / scrollConfig.tilesPerView;\n      const isAtEnd = element.scrollLeft + element.clientWidth >= element.scrollWidth;\n\n      // Calculate scroll step based on configuration\n      const scrollStep = tileWidth / scrollConfig.stepsPerTile;\n      if (isAtEnd) {\n        // When reaching the end, smoothly transition to the first tile\n        element.scrollTo({\n          left: 0,\n          behavior: scrollConfig.scrollBehavior\n        });\n\n        // Then after a brief pause, start the scrolling again\n        setTimeout(() => {\n          element.scrollBy({\n            left: scrollStep,\n            behavior: scrollConfig.scrollBehavior\n          });\n        }, scrollConfig.resetDelay);\n      } else {\n        // Normal scroll step\n        element.scrollBy({\n          left: scrollStep,\n          behavior: scrollConfig.scrollBehavior\n        });\n      }\n    }\n  };\n  useEffect(() => {\n    let scrollInterval;\n    if (!isHovered && elementRef.current) {\n      scrollInterval = setInterval(() => {\n        autoScroll(elementRef.current);\n      }, scrollConfig.frameRate);\n    }\n    return () => {\n      clearInterval(scrollInterval);\n    };\n  }, [isHovered, elementRef]);\n};\n_s(useAutoScroll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","scrollConfig","useAutoScroll","elementRef","isHovered","_s","autoScroll","element","tileWidth","clientWidth","tilesPerView","isAtEnd","scrollLeft","scrollWidth","scrollStep","stepsPerTile","scrollTo","left","behavior","scrollBehavior","setTimeout","scrollBy","resetDelay","scrollInterval","current","setInterval","frameRate","clearInterval"],"sources":["/Users/sandipkumar.yadav/Desktop/image-gallery/src/hooks/useAutoScroll.ts"],"sourcesContent":["import { useEffect, RefObject } from 'react';\nimport { scrollConfig } from '../config/scrollConfig';\n\nexport const useAutoScroll = (\n  elementRef: RefObject<HTMLDivElement | null>,\n  isHovered: boolean\n) => {\n  const autoScroll = (element: HTMLDivElement | null) => {\n    if (element) {\n      const tileWidth = element.clientWidth / scrollConfig.tilesPerView;\n      const isAtEnd = element.scrollLeft + element.clientWidth >= element.scrollWidth;\n      \n      // Calculate scroll step based on configuration\n      const scrollStep = tileWidth / scrollConfig.stepsPerTile;\n\n      if (isAtEnd) {\n        // When reaching the end, smoothly transition to the first tile\n        element.scrollTo({ \n          left: 0, \n          behavior: scrollConfig.scrollBehavior \n        });\n        \n        // Then after a brief pause, start the scrolling again\n        setTimeout(() => {\n          element.scrollBy({ \n            left: scrollStep, \n            behavior: scrollConfig.scrollBehavior \n          });\n        }, scrollConfig.resetDelay);\n      } else {\n        // Normal scroll step\n        element.scrollBy({ \n          left: scrollStep, \n          behavior: scrollConfig.scrollBehavior \n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    let scrollInterval: NodeJS.Timeout;\n\n    if (!isHovered && elementRef.current) {\n      scrollInterval = setInterval(() => {\n        autoScroll(elementRef.current);\n      }, scrollConfig.frameRate);\n    }\n\n    return () => {\n      clearInterval(scrollInterval);\n    };\n  }, [isHovered, elementRef]);\n}; "],"mappings":";AAAA,SAASA,SAAS,QAAmB,OAAO;AAC5C,SAASC,YAAY,QAAQ,wBAAwB;AAErD,OAAO,MAAMC,aAAa,GAAGA,CAC3BC,UAA4C,EAC5CC,SAAkB,KACf;EAAAC,EAAA;EACH,MAAMC,UAAU,GAAIC,OAA8B,IAAK;IACrD,IAAIA,OAAO,EAAE;MACX,MAAMC,SAAS,GAAGD,OAAO,CAACE,WAAW,GAAGR,YAAY,CAACS,YAAY;MACjE,MAAMC,OAAO,GAAGJ,OAAO,CAACK,UAAU,GAAGL,OAAO,CAACE,WAAW,IAAIF,OAAO,CAACM,WAAW;;MAE/E;MACA,MAAMC,UAAU,GAAGN,SAAS,GAAGP,YAAY,CAACc,YAAY;MAExD,IAAIJ,OAAO,EAAE;QACX;QACAJ,OAAO,CAACS,QAAQ,CAAC;UACfC,IAAI,EAAE,CAAC;UACPC,QAAQ,EAAEjB,YAAY,CAACkB;QACzB,CAAC,CAAC;;QAEF;QACAC,UAAU,CAAC,MAAM;UACfb,OAAO,CAACc,QAAQ,CAAC;YACfJ,IAAI,EAAEH,UAAU;YAChBI,QAAQ,EAAEjB,YAAY,CAACkB;UACzB,CAAC,CAAC;QACJ,CAAC,EAAElB,YAAY,CAACqB,UAAU,CAAC;MAC7B,CAAC,MAAM;QACL;QACAf,OAAO,CAACc,QAAQ,CAAC;UACfJ,IAAI,EAAEH,UAAU;UAChBI,QAAQ,EAAEjB,YAAY,CAACkB;QACzB,CAAC,CAAC;MACJ;IACF;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd,IAAIuB,cAA8B;IAElC,IAAI,CAACnB,SAAS,IAAID,UAAU,CAACqB,OAAO,EAAE;MACpCD,cAAc,GAAGE,WAAW,CAAC,MAAM;QACjCnB,UAAU,CAACH,UAAU,CAACqB,OAAO,CAAC;MAChC,CAAC,EAAEvB,YAAY,CAACyB,SAAS,CAAC;IAC5B;IAEA,OAAO,MAAM;MACXC,aAAa,CAACJ,cAAc,CAAC;IAC/B,CAAC;EACH,CAAC,EAAE,CAACnB,SAAS,EAAED,UAAU,CAAC,CAAC;AAC7B,CAAC;AAACE,EAAA,CAjDWH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}