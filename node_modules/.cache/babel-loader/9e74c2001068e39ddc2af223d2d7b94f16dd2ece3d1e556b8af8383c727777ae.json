{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { scrollConfig } from '../config/scrollConfig';\nexport const useAutoScroll = (elementRef, isHovered) => {\n  _s();\n  useEffect(() => {\n    let scrollInterval;\n    if (elementRef.current && !isHovered) {\n      const scroll = () => {\n        const element = elementRef.current;\n        if (!element) return;\n        const tileWidth = element.clientWidth / scrollConfig.tilesPerView;\n        const isAtEnd = element.scrollLeft + element.clientWidth >= element.scrollWidth;\n        if (isAtEnd) {\n          // Reset to start with smooth transition\n          element.style.scrollBehavior = 'auto';\n          element.scrollLeft = 0;\n          // Force a reflow\n          element.offsetHeight;\n          element.style.scrollBehavior = scrollConfig.scrollBehavior;\n        } else {\n          // Apply transition styles\n          element.style.setProperty('--transition-duration', scrollConfig.transitionDuration);\n          element.style.setProperty('--transition-timing', scrollConfig.transitionTimingFunction);\n          // Scroll one tile\n          element.scrollBy({\n            left: tileWidth,\n            behavior: scrollConfig.scrollBehavior\n          });\n        }\n      };\n\n      // Set interval based on scrollTimePerTile\n      scrollInterval = setInterval(scroll, scrollConfig.scrollTimePerTile);\n    }\n    return () => {\n      if (scrollInterval) {\n        clearInterval(scrollInterval);\n      }\n    };\n  }, [elementRef, isHovered]);\n};\n_s(useAutoScroll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","scrollConfig","useAutoScroll","elementRef","isHovered","_s","scrollInterval","current","scroll","element","tileWidth","clientWidth","tilesPerView","isAtEnd","scrollLeft","scrollWidth","style","scrollBehavior","offsetHeight","setProperty","transitionDuration","transitionTimingFunction","scrollBy","left","behavior","setInterval","scrollTimePerTile","clearInterval"],"sources":["/Users/sandipkumar.yadav/Desktop/image-gallery/src/hooks/useAutoScroll.ts"],"sourcesContent":["import { useEffect, RefObject } from 'react';\nimport { scrollConfig } from '../config/scrollConfig';\n\nexport const useAutoScroll = (\n  elementRef: RefObject<HTMLDivElement | null>,\n  isHovered: boolean\n) => {\n  useEffect(() => {\n    let scrollInterval: NodeJS.Timeout;\n\n    if (elementRef.current && !isHovered) {\n      const scroll = () => {\n        const element = elementRef.current;\n        if (!element) return;\n\n        const tileWidth = element.clientWidth / scrollConfig.tilesPerView;\n        const isAtEnd = element.scrollLeft + element.clientWidth >= element.scrollWidth;\n\n        if (isAtEnd) {\n          // Reset to start with smooth transition\n          element.style.scrollBehavior = 'auto';\n          element.scrollLeft = 0;\n          // Force a reflow\n          element.offsetHeight;\n          element.style.scrollBehavior = scrollConfig.scrollBehavior;\n        } else {\n          // Apply transition styles\n          element.style.setProperty('--transition-duration', scrollConfig.transitionDuration);\n          element.style.setProperty('--transition-timing', scrollConfig.transitionTimingFunction);\n          // Scroll one tile\n          element.scrollBy({\n            left: tileWidth,\n            behavior: scrollConfig.scrollBehavior\n          });\n        }\n      };\n\n      // Set interval based on scrollTimePerTile\n      scrollInterval = setInterval(scroll, scrollConfig.scrollTimePerTile);\n    }\n\n    return () => {\n      if (scrollInterval) {\n        clearInterval(scrollInterval);\n      }\n    };\n  }, [elementRef, isHovered]);\n}; "],"mappings":";AAAA,SAASA,SAAS,QAAmB,OAAO;AAC5C,SAASC,YAAY,QAAQ,wBAAwB;AAErD,OAAO,MAAMC,aAAa,GAAGA,CAC3BC,UAA4C,EAC5CC,SAAkB,KACf;EAAAC,EAAA;EACHL,SAAS,CAAC,MAAM;IACd,IAAIM,cAA8B;IAElC,IAAIH,UAAU,CAACI,OAAO,IAAI,CAACH,SAAS,EAAE;MACpC,MAAMI,MAAM,GAAGA,CAAA,KAAM;QACnB,MAAMC,OAAO,GAAGN,UAAU,CAACI,OAAO;QAClC,IAAI,CAACE,OAAO,EAAE;QAEd,MAAMC,SAAS,GAAGD,OAAO,CAACE,WAAW,GAAGV,YAAY,CAACW,YAAY;QACjE,MAAMC,OAAO,GAAGJ,OAAO,CAACK,UAAU,GAAGL,OAAO,CAACE,WAAW,IAAIF,OAAO,CAACM,WAAW;QAE/E,IAAIF,OAAO,EAAE;UACX;UACAJ,OAAO,CAACO,KAAK,CAACC,cAAc,GAAG,MAAM;UACrCR,OAAO,CAACK,UAAU,GAAG,CAAC;UACtB;UACAL,OAAO,CAACS,YAAY;UACpBT,OAAO,CAACO,KAAK,CAACC,cAAc,GAAGhB,YAAY,CAACgB,cAAc;QAC5D,CAAC,MAAM;UACL;UACAR,OAAO,CAACO,KAAK,CAACG,WAAW,CAAC,uBAAuB,EAAElB,YAAY,CAACmB,kBAAkB,CAAC;UACnFX,OAAO,CAACO,KAAK,CAACG,WAAW,CAAC,qBAAqB,EAAElB,YAAY,CAACoB,wBAAwB,CAAC;UACvF;UACAZ,OAAO,CAACa,QAAQ,CAAC;YACfC,IAAI,EAAEb,SAAS;YACfc,QAAQ,EAAEvB,YAAY,CAACgB;UACzB,CAAC,CAAC;QACJ;MACF,CAAC;;MAED;MACAX,cAAc,GAAGmB,WAAW,CAACjB,MAAM,EAAEP,YAAY,CAACyB,iBAAiB,CAAC;IACtE;IAEA,OAAO,MAAM;MACX,IAAIpB,cAAc,EAAE;QAClBqB,aAAa,CAACrB,cAAc,CAAC;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,CAACH,UAAU,EAAEC,SAAS,CAAC,CAAC;AAC7B,CAAC;AAACC,EAAA,CA5CWH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}